<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Requests for Comment on GEOS</title>
    <link>http://libgeos.org/development/rfcs/</link>
    <description>Recent content in Requests for Comment on GEOS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 14:21:00 -0700</lastBuildDate><atom:link href="http://libgeos.org/development/rfcs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GEOS RFC 1 - Project Steering Committee</title>
      <link>http://libgeos.org/development/rfcs/rfc01/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc01/</guid>
      <description>This document describes how the PSC GEOS Project Steering Committee determines membership, and makes decisions on all aspects of the GEOS project - both technical and non-technical.
         RFC 1 Project Steering Committee   Author Paul Ramsey   Contact pramsey@cleverelephant.ca   Status Approved, April 10, 2008    Summary This document describes how the GEOS Project Steering Committee (PSC) determines membership, and makes decisions on all aspects of the GEOS project - both technical and non-technical.</description>
    </item>
    
    <item>
      <title>GEOS RFC 2 - Committer Guidelines </title>
      <link>http://libgeos.org/development/rfcs/rfc02/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc02/</guid>
      <description>This document describes the technical and legal responsibilities of [wiki:PSC GEOS committers].
         RFC 2 Committer Guidelines   Author Paul Ramsey, Regina Obe   Contact pramsey@cleverelephant.ca, lr@pcorp.us   Status Draft    Summary This document describes the technical and legal responsibilities of [wiki:PSC GEOS committers].
Election to GIT Commit Access Permission for GIT commit access shall be provided to new developers only if accepted by the [wiki:PSC GEOS Project Steering Committee].</description>
    </item>
    
    <item>
      <title>GEOS RFC 3 - Thread Safe CAPI </title>
      <link>http://libgeos.org/development/rfcs/rfc03/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc03/</guid>
      <description>Summary The current CAPI in GEOS is not thread safe. The error handling and initialization/finalization process specifically can cause problems.
Definitions (As defined by Frank Warmerdam in http://trac.osgeo.org/gdal/wiki/rfc16_ogr_reentrancy)
Reentrant: A reentrant function can be called simultaneously by multiple threads provided that each invocation of the function references unique data.
Thread-safe: A thread-safe function can be called simultaneously by multiple threads when each invocation references shared data. All access to the shared data is serialized.</description>
    </item>
    
    <item>
      <title>GEOS RFC 4 - Code Formatting Style</title>
      <link>http://libgeos.org/development/rfcs/rfc04/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc04/</guid>
      <description>This document proposes and describes desired code formatting style used across C/C++ source code in GEOS.
         RFC 4 Code Formatting Style   Author Mateusz Łoskot   Contact mateusz@loskot.net   Status Dropped (no agreement)    Summary The document proposes and describes desired default code formatting style guidelines for GEOS programming in C and C++ languages.
The goal of this document is to initiate process to reach an agreement for the default code formatting style.</description>
    </item>
    
    <item>
      <title>GEOS RFC 5 - C&#43;&#43;11 Compilation Mode</title>
      <link>http://libgeos.org/development/rfcs/rfc05/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc05/</guid>
      <description>This document proposes and describes desired code formatting style used across C/C++ source code in GEOS.
         RFC 5 C++11 Compilation Mode   Author Mateusz Łoskot   Contact mateusz@loskot.net   Status Accepted (no agreement)    Summary The document proposes to switch to C++11 compilation mode as default throughout the whole C++ source code of GEOS.
The goal of the document is to request and achieve agreement on using C++11 as the minimum required version of the C++ programming language standard.</description>
    </item>
    
    <item>
      <title>GEOS RFC 6 - Require explicit configure to use the C&#43;&#43; API</title>
      <link>http://libgeos.org/development/rfcs/rfc06/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc06/</guid>
      <description>RFC 9 Require explicit configure to use the C++ API   Author Regina Obe   Contact lr@pcorp.us   Status Not Passed    Past discussions Trac ticket to deprecate another request to deprecate and osm2pgsql mess more examples about how apps linking directly to GEOS C++ causing problems for other applications Pointing out removing ability to use GEOS C++ reduces users freedoms</description>
    </item>
    
    <item>
      <title>GEOS RFC 7 - Use CMake for Build System</title>
      <link>http://libgeos.org/development/rfcs/rfc07/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc07/</guid>
      <description>RFC 7 Use CMake for build system   Author Daniel Baston   Contact dbaston@gmail.com   Status Accepted, January 15, 2021    This document proposes to use CMake as the build system for GEOS and discontinue use of autotools and NMake.
Since version 3.5, we have officially supported building GEOS with CMake: https://trac.osgeo.org/geos/wiki/BuildingOnUnixWithCMake
GEOS is also required to build with autotools and NMake.</description>
    </item>
    
    <item>
      <title>GEOS RFC 8 - Improve Coordinate Sequence API (WIP)</title>
      <link>http://libgeos.org/development/rfcs/rfc08/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc08/</guid>
      <description>RFC 8 Improve Coordinate Sequence API   Author Martin Davis   Contact martin.davis@crunchydata.com   Status In Discussion    This document proposes to modify the Coordinate Sequence API to improve performance and adaptiveness.
These improvements are (likely to be) breaking changes to the C++ API.
These may require extensions to the C API to be externally available, but should not result in breaking the current C API.</description>
    </item>
    
    <item>
      <title>GEOS RFC 9 - Restore the C&#43;&#43; API (WIP)</title>
      <link>http://libgeos.org/development/rfcs/rfc09/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>http://libgeos.org/development/rfcs/rfc09/</guid>
      <description>RFC 9 Restore the C++ API   Author Mateusz Łoskot   Contact mateusz@loskot.net   Status [https://lists.osgeo.org/pipermail/geos-devel/2019-May/008972.html Proposed]    The GEOS library is a C++ library offering two kinds of public API: C++ API and C API.
The GEOS library started as a C++ library. The C API was introduced in version 2.2.
The GEOS library has never promised any stability of the C++ API and this fact has always been documented and clearly stated:</description>
    </item>
    
  </channel>
</rss>
